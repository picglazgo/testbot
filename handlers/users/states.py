import re

from aiogram import types
from aiogram.dispatcher import FSMContext

from data import User, Promocode
from keyboards import close_markup, authorize_markup2, authorize_markup1
from keyboards.inline.user_menu import return_cabinet_markup
from loader import vip, bot
from states import ActivatePromo, BuyCheating
from utils import config, SMMPanelAPI, SMMPanel





@vip.message_handler(state=BuyCheating.count)
async def cheat_link_states(msg: types.Message, state: FSMContext):
	if msg.text.isdigit():
		async with state.proxy() as data:
			service = data['service']
			cheat_type = data['type']
			order = data['order']

		orders = SMMPanel().cheat.get(f'{service}').get(cheat_type)
		order_info = orders.get(order)
		if int(order_info.get('min')) <= int(msg.text) <= int(order_info.get('max')):
			async with state.proxy() as data:
				data['count'] = msg.text
			price = float(order_info.get('price')) * int(msg.text)

			await msg.answer(
				text=f"<b>üìõ –í–∞–∂–Ω–æ!</b>\n"
					 f"<b>–í–≤–æ–¥–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω—É–∂–Ω—ã–π –≤–∞–º –≤–∏–¥ —É—Å–ª—É–≥–∏! "
					 f"–ü—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –≤–≤–æ–¥–µ - —É –≤–∞—Å –ø—Ä–æ–ø–∞–¥–∞—é—Ç –¥–µ–Ω—å–≥–∏!</b>\n\n"
					 f"<b>üíà C–µ—Ä–≤–∏—Å:</b> {SMMPanel().cheat_service_name(service)} {SMMPanel().cheat_type_name(cheat_type)}\n"
					 f"<b>üßø –ù–∞–∑–≤–∞–Ω–∏–µ:</b> {order_info.get('name')}\n"
					 f"<b>üßø –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {msg.text}\n"
					 f"<b>üßø –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {msg.text}\n"
					 f"<b>üí≥ –¶–µ–Ω–∞:</b> {price} RUB"
			)
			await msg.answer(
				text='<b>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É:</b>'
			)
			await BuyCheating.next()
		else:
			await msg.answer(
				text=f'–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ!\n–î–æ—Å—Ç—É–ø–Ω–æ: –æ—Ç {order_info.get("min")} –¥–æ {order_info.get("max")}'
			)
			await state.finish()
	else:
		await msg.answer(
			text=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤ —á–∏—Å–ª–∞—Ö!'
		)
		await state.finish()


@vip.message_handler(state=BuyCheating.link)
async def cheat_link_states(msg: types.Message, state: FSMContext):
	link = re.search("(?P<url>https?://[^\s]+)", msg.text)
	if link is not None:
		link = link.group()

		async with state.proxy() as data:
			data['link'] = link

		await msg.answer(
			text=f'–°—Å—ã–ª–∫–∞ –¥–ª—è —É—Å–ª—É–≥–∏: {link}, –≤–µ—Ä–Ω–æ?\n –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "+"'
		)
		await BuyCheating.next()
	else:
		await state.finish()
		await msg.answer(
			text='–≠—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞!'
		)


@vip.message_handler(state=BuyCheating.confirm)
async def cheat_confirm(msg: types.Message, state: FSMContext):
	if msg.text.startswith("+"):
		async with state.proxy() as data:
			service = data['service']
			cheat_type = data['type']
			order = data['order']
			count = data['count']
			link = data['link']

		orders = SMMPanel().cheat.get(f'{service}').get(cheat_type)
		order_info = orders.get(order)
		price = float(order_info.get('price')) * int(count)
		service_price = float(order_info.get('price_service')) * int(count)

		if price <= float(User(msg.from_user.id).balance):
			order = await SMMPanelAPI().add_order(
				service_id=order,
				link=link,
				count=count
			)
			if order != 'no_balance':
				if order != 'no_order':
					await User(msg.from_user.id).updateBalance(-price)
					await msg.answer(
						text=f"<b>–í–∞—à –∑–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è!</b>\n"
							 f"<b>–£—Å–ª—É–≥–∞:</b>  {SMMPanel().cheat_service_name(service)} {SMMPanel().cheat_type_name(cheat_type)} | {order_info.get('name')}"
							 f"<b>–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:</b> {count}",
						reply_markup=close_markup()
					)
					await bot.send_message(
						chat_id=config.config('admin_group'),
						text=f"<b>–ö—É–ø–ª–µ–Ω–∞ –Ω–∞–∫—Ä—É—Ç–∫–∞!</b>\n\n"
							 f"<b>üíà C–µ—Ä–≤–∏—Å:</b> {SMMPanel().cheat_service_name(service)} {SMMPanel().cheat_type_name(cheat_type)}\n"
							 f"<b>üßø –ù–∞–∑–≤–∞–Ω–∏–µ:</b> {order_info.get('name')}\n"
							 f"<b>üßø –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {count}\n"
							 f"<b>üí≥ –¶–µ–Ω–∞:</b> {price} RUB\n"
							 f"<b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</b> {msg.from_user.get_mention()} | {msg.from_user.id}\n"
							 f"<b>–ö—É–¥–∞:</b> {link}",
						disable_web_page_preview=True
					)
					await SMMPanel().cheat_logs(
						user_id=msg.from_user.id,
						service=service,
						service_name=SMMPanel().cheat_service_name(service),
						cheat_type=cheat_type,
						order_id=order,
						order_name=order_info.get('name'),
						link=link,
						count=count,
						price_service=service_price,
						price=price
					)
				else:
					print(order)
					await msg.answer(
						text='<b>T–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</b>\n\n'
							 '–í–æ–∑–º–æ–∂–Ω–æ –Ω–∞ —ç—Ç—É —Å—Å—ã–ª–∫—É —É–∂–µ —Å—Ç–æ–∏—Ç –∑–∞–∫–∞–∑ - –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å'
					)
			else:
				await msg.answer(
					text='<b>T–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</b>\n\n'
						 '–í–æ–∑–º–æ–∂–Ω–æ –Ω–∞ —ç—Ç—É —Å—Å—ã–ª–∫—É —É–∂–µ —Å—Ç–æ–∏—Ç –∑–∞–∫–∞–∑ - –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å'
				)
				await bot.send_message(
					chat_id=config.config('admin_group'),
					text=f'<b>–ü–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å SMMPanel!\n'
						 f'–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {await SMMPanelAPI().get_balance()} RUB\n'
						 f'–ü–æ–∫—É–ø–∫–∞ –Ω–∞ {price} RUB</b>'
				)
		else:
			await msg.answer(
				text='<b>‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.</b>'
			)
	else:
		await msg.answer(
			text='<b>–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!</b>'
		)
	await state.finish()


@vip.message_handler(state=ActivatePromo.promo)
async def user_promo(msg: types.Message, state: FSMContext):
	promocode = Promocode(promo=msg.text)
	data = await promocode.getPromoList()
	stateData = await state.get_data()
	messageId = stateData['messageid']
	await msg.delete()
	print(data)
	
	if data is not None:
		if int(data[3]) > 0:
			if str(msg.from_user.id) not in data[4].split(','):
				await promocode.getActivatePromo(msg.from_user.id)
				await User(msg.from_user.id).updateBalance(float(data[2]))
				await msg.bot.edit_message_caption(chat_id=msg.chat.id, message_id=messageId, caption=f'''‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥</b>
‚îî<i>–í–≤–µ–¥–µ–Ω–Ω—ã–π –í–∞–º–∏ –ø—Ä–æ–º–æ–∫–æ–¥ </i>¬´<b>123</b>¬ª<i> —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ</i> <code>{msg.text}‚ÇΩ.</code>''', reply_markup=return_cabinet_markup())
				await msg.bot.send_message(
					chat_id=config.config('admin_group'),
					caption=f'<b>üéÅ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞:</b>\n\n'
						 f'<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {msg.from_user.get_mention(as_html=True)} | {msg.from_user.id}\n\n'
						 f'<b>–ü—Ä–æ–º–æ–∫–æ–¥:</b> {msg.text} | <b>–°—É–º–º–∞:</b> {data[2]} RUB', reply_markup=return_cabinet_markup()
				)
			else:
				await msg.bot.edit_message_caption(chat_id=msg.chat.id, message_id=messageId,
					caption=f'–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥', reply_markup=return_cabinet_markup()
				)
		else:
			await promocode.deletePromo()
			await msg.bot.edit_message_caption(chat_id=msg.chat.id, message_id=messageId,
				caption=f'–ü—Ä–æ–º–æ–∫–æ–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è', reply_markup=return_cabinet_markup()
			)
	else:
		await msg.bot.edit_message_caption(chat_id=msg.chat.id, message_id=int(messageId),
			caption=f'''‚ùå <b>–ü—Ä–æ–º–æ–∫–æ–¥</b>
‚îî<i>–í–≤–µ–¥–µ–Ω–Ω—ã–π –í–∞–º–∏ –ø—Ä–æ–º–æ–∫–æ–¥ </i>¬´<b>{msg.text}</b>¬ª<i>, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑..</i>''', parse_mode=types.ParseMode.HTML, reply_markup=return_cabinet_markup()
		)
